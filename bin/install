#!/bin/bash

BASEDIR="tmp"

 declare -A SOFTWARE_DEPENDENCIES

 # [ { "executable": "package" }, ... ]
 SOFTWARE_DEPENDENCIES["vim"]="vim"
 SOFTWARE_DEPENDENCIES["git"]="git"
 SOFTWARE_DEPENDENCIES["gvim"]="vim-gtk"
 SOFTWARE_DEPENDENCIES["ag"]="silversearcher-ag"


#
# Checks if $1 is a executable file in the current path
#
# @param $1 Name of the executable
#
commandExists () {

    command -v "$1" >/dev/null 2>&1

    if [[ $? -eq 0 ]]; then
        return 1
    else
        return 0
    fi

}

quit () {
    exit $1
}

missingDependencies () {

    local unmetDependencies=()

    for executable in ${!SOFTWARE_DEPENDENCIES[@]}; do

        local package=${SOFTWARE_DEPENDENCIES[$executable]}

        commandExists $executable

        if [[ $? -eq 0 ]]; then
            unmetDependencies+=($package)
        fi

    done

    if [ ${#unmetDependencies[@]} -ne 0 ]; then
        commandExists apt-get

        local aptExists=$?

        echo "The following dependencies are not met:"
        echo ""

        for dependency in ${unmetDependencies[@]}; do
            echo "    * $dependency"
        done
        echo

        if [[ $aptExists -eq 1 ]]; then

            read -p "Would you like to install them now? (y/N) " -n 1 -r
            echo
            echo

            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                quit 1
            fi

            sudo apt-get install ${unmetDependencies[@]}

        else

            echo
            echo "Please install them before continue."

            quit 1

        fi
    fi

    return 0

}

powerlineFonts () {
    git clone https://github.com/powerline/fonts.git
    cd fonts
    ./install.sh
    cd ..
}

vimConfig () {

    if [ -d ~/.vim ] || [ -f ~/.vimrc ]; then

cat << EOF
It seems that you already have a vim configuration set up at your home
directory.

If you wish to continue, a backup of your vimrc file and vimrc folder will be
created under your home directory inside ~/.vim-config-bak. Otherwise all
the current config will be removed and replaced by this one.

EOF

        read -p "Do a back up of your current vim config? (y/N) " -n 1 -r

        if [[ $REPLY =~ ^[Yy]$ ]]; then

            mkdir ~/.vim-config-bak

            cp ~/.vimrc ~/.vim-config-bak
            cp -r ~/.vim ~/.vim-config-bak

        fi

        rm ~/.vimrc
        rm -rf ~/.vim

    fi

    cp ../vimrc ~/.vimrc
    mkdir ~/.vim

}

plug () {

    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    vim +PlugInstall +qall

}

mkdir $BASEDIR
cd $BASEDIR

missingDependencies
powerlineFonts
vimConfig
plug

cd ..
rm -rf $BASEDIR
